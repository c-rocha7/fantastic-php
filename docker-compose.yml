# Definição dos serviços (contêineres)
services:

  # Serviço: Nginx (Servidor Web)
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_server
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - db

  # Serviço: PHP-FPM (Processador PHP)
  php:
    build: ./php
    container_name: php_fpm_processor
    volumes:
      - ./src:/var/www/html
    depends_on:
      - redis # Adicionamos a dependência do Redis

  # Serviço: Banco de Dados MySQL
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'root_password'
      MYSQL_DATABASE: 'meu_banco'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'user_password'
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql

  # Serviço: phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_ui
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
    depends_on:
      - db

  # --- NOVOS SERVIÇOS ---

  # Serviço: Redis (Banco de Dados em Memória)
  redis:
    image: redis:alpine
    container_name: redis_cache
    restart: always
    volumes:
      # Persiste os dados do Redis em um volume nomeado
      - redis-data:/data

  # Serviço: Redis Commander (Interface Web para Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis_commander_ui
    restart: always
    ports:
      # Expõe a porta 8081 do contêiner na porta 8082 da sua máquina
      - "8082:8081"
    environment:
      # Informa ao Redis Commander como se conectar ao nosso serviço Redis
      # O formato é 'alias:hostname:porta'
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis

# Definição dos volumes nomeados
volumes:
  db-data:
  redis-data: # <-- Novo volume para persistir os dados do Redis
